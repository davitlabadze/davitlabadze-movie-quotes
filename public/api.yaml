openapi: 3.0.0
info:
  title: Movies Quotes API
  description: Movies Quotes
  version: 0.1.9

servers:
  - url: http://localhost:8000/api
    description: local server
  - url: http://producation.app/api
    description: production server
components:
      securitySchemes:
        bearerAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
      security:
        - bearerAuth: []
tags: [
  {
    name: "Authorization",
      description: "Operations about user",
      externalDocs: {
      description: "Find out more",
      }
  },
  {
    name: "Guest",
      description: "Visible information for the guest",
      externalDocs: {
      description: "Find out more",
      }
  },
  {
    name: "Admin",
      description: "Visible information for the admin",
      externalDocs: {
      description: "Find out more",
      }
  },
]
paths:
  /login:
      post:
        tags: [
          "Authorization"
        ]
        summary: Returns a personal access token.
        parameters:
          - in: query
            name: email
            required: true
            schema:
              email:
                type: string
                description: email
          - in: query
            name: password
            required: true
            schema:
              password:
                type: string
                description: password
        responses:
          '200':
            description: Auto generated using Swagger Inspector
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      type: boolean
                    token:
                      type: string
                examples:
                  '0':
                    value: >-
                      {"user":true,"token":"10|Ckjm0fYQ4IT1QEVcqCbtjqjJPKQr8JcxsW30Qarq"}
  /logout:
    post:
      tags: [
        "Authorization"
      ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                email:
                  type: string
            examples:
              '0':
                value: |-
                  {
                      "email":"admin@admin.ge",
                      "password":"admin"
                  }
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: integer
              examples:
                '0':
                  value: '{"status":200,"message":"Logged In Successfully"}'
  /get-quote:
    get:
      tags: [
        "Guest"
      ]
      summary: Returns the quote to the guest.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  singleQuote:
                    type: object
                    properties:
                      thumbnail:
                        type: string
                      quote:
                        type: object
                        properties:
                          ka:
                            type: string
                          en:
                            type: string
                      updated_at:
                        type: string
                      movie:
                        type: object
                        properties:
                          movie:
                            type: object
                            properties:
                              ka:
                                type: string
                              en:
                                type: string
                          updated_at:
                            type: string
                          created_at:
                            type: string
                          id:
                            type: integer
                      created_at:
                        type: string
                      id:
                        type: integer
                      movie_id:
                        type: integer
              examples:
                '0':
                  value: >-
                    {"singleQuote":{"id":30,"movie_id":64,"quote":{"en":"tes","ka":"test"},"thumbnail":"thumbnails\/JXQLlFrCUOr7DpsZfNS5ewLiLNpXQt5o3IrGezDi.jpg","created_at":"2022-05-03T07:28:58.000000Z","updated_at":"2022-05-03T07:28:58.000000Z","movie":{"id":64,"movie":{"en":"\u10e2\u10d4\u10e1\u10e2","ka":"\u10e2\u10d4\u10e1\u10e2"},"created_at":"2022-05-02T19:25:56.000000Z","updated_at":"2022-05-02T19:25:56.000000Z"}}}

  /get-quotes/{movieId}:
    get:
      tags: [
        "Guest"
      ]
      summary: Returns quotes according to the movie ID.
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  movie:
                    type: object
                    properties:
                      ka:
                        type: string
                      en:
                        type: string
                  updated_at:
                    type: string
                  created_at:
                    type: string
                  id:
                    type: integer
                  quotes:
                    type: array
                    items:
                      type: object
                      properties:
                        thumbnail:
                          type: string
                        quote:
                          type: object
                          properties:
                            ka:
                              type: string
                            en:
                              type: string
                        updated_at:
                          type: string
                        created_at:
                          type: string
                        id:
                          type: integer
                        movie_id:
                          type: integer
              examples:
                '0':
                  value: >-
                    {"id":64,"movie":{"en":"\u10e2\u10d4\u10e1\u10e2","ka":"\u10e2\u10d4\u10e1\u10e2"},"created_at":"2022-05-02T19:25:56.000000Z","updated_at":"2022-05-02T19:25:56.000000Z","quotes":[{"id":30,"movie_id":64,"quote":{"en":"tes","ka":"test"},"thumbnail":"thumbnails\/JXQLlFrCUOr7DpsZfNS5ewLiLNpXQt5o3IrGezDi.jpg","created_at":"2022-05-03T07:28:58.000000Z","updated_at":"2022-05-03T07:28:58.000000Z"},{"id":32,"movie_id":64,"quote":{"en":"dato","ka":"dato"},"thumbnail":"thumbnails\/nK7FrTirmlEcy8NSegsUGugN7VpFBG1Q5XOZatdr.jpg","created_at":"2022-05-03T07:30:49.000000Z","updated_at":"2022-05-03T07:30:49.000000Z"},{"id":33,"movie_id":64,"quote":{"en":"test","ka":"sdasd"},"thumbnail":"thumbnails\/BSdDMUyjiJs438TrMG4FlOA4ORAbV5MO3PgdDHTm.jpg","created_at":"2022-05-03T07:31:00.000000Z","updated_at":"2022-05-03T07:31:00.000000Z"}]}
  /dashboard:
    get:
      tags: [
        "Admin"
      ]
      security:
          - bearerAuth: []
      summary: Return the counted data.
      description: Return quote count, movie count and recent add data.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  quotesCount:
                    type: integer
                  moviesCount:
                    type: integer
                  quotes:
                    type: array
                    items:
                      type: object
                      properties:
                        thumbnail:
                          type: string
                        quote:
                          type: object
                          properties:
                            ka:
                              type: string
                            en:
                              type: string
                        updated_at:
                          type: string
                        movie:
                          type: object
                          properties:
                            movie:
                              type: object
                              properties:
                                ka:
                                  type: string
                                en:
                                  type: string
                            updated_at:
                              type: string
                            created_at:
                              type: string
                            id:
                              type: integer
                        created_at:
                          type: string
                        id:
                          type: integer
                        movie_id:
                          type: integer
  /movies:
    get:
      security:
        - bearerAuth: []
      tags: [
        "Admin"
      ]
      summary: Return Movies.
      description: Return movie.
      responses:
        '200':
          description: Return movie.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  movie:
                    type: object
                    properties:
                      en:
                        type: string
                      ka:
                        type: string
                  create_et:
                    type: string
                  updated_at:
                    type: string
  /movies/create:
    post:
      tags: [
        "Admin"
      ]
      security:
        - bearerAuth: []
      description: Create movie.
      parameters:
        - in: query
          name: movie_en
          required: true
          schema:
            movie_en:
              type: string
              description: movie name english.
        - in: query
          name: movie_ka
          required: true
          schema:
            movie_ka:
              type: string
              description: movie name georiga.
      summary: create movie.
      responses:
        "200":
          description: A JSON array of add movie.
          content:
            application/json:
              schema:
                properties:
                  movie:
                    type: object
                    properties:
                      en:
                        type: string
                      ka:
                        type: string
                  create_et:
                    type: string
                  updated_at:
                    type: string
                  id:
                    type: integer
  /movies/{movieId}/edit:
    get:
      tags: [
        "Admin"
      ]
      security:
        - bearerAuth: []
      description: Edit movies.
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  movie:
                    type: object
                    properties:
                      ka:
                        type: string
                      en:
                        type: string
                  updated_at:
                    type: string
                  created_at:
                    type: string
                  id:
                    type: integer
              examples:
                '0':
                  value: >-
                    {"id":6,"movie":{"en":"test","ka":"\u10e2\u10d4\u10e1\u10e2"},"created_at":"2022-04-28T08:01:33.000000Z","updated_at":"2022-04-28T08:01:33.000000Z"}
  /movies/{movieId}/update:
    put:
      tags: [
        "Admin"
      ]
      description: Update movie.
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type : integer
            format: int64
            minimum: 1
        - in: query
          name: movie-en
          required: true
          schema:
            movie-en:
              type: string
              description: movie name english.
        - in: query
          name: movie-ka
          required: true
          schema:
            movie-ka:
              type: string
              description: movie name georiga.
      summary: Update movie.
      responses:
        "200":
          description: A JSON array of edit movie.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                '0':
                  value: >-
                    {"id":6,"movie":{"en":"test1","ka":"\u10e2\u10d4\u10e1\u10e21"},"created_at":"2022-04-28T08:01:33.000000Z","updated_at":"2022-04-28T08:01:33.000000Z"}
      security:
        - bearerAuth: []
  /movies/{movieId}:
    delete:
      tags: [
        "Admin"
      ]
      security:
        - bearerAuth: []
      summary: Delete a movies.
      parameters:
        - name: movieId
          in: path
          required: true
          description: Delete a movie.
          schema:
            type : integer
            format: int64
            minimum: 1
      description: Delete a movie.
      responses: {
        200: {
          description: Delete successfully!
        },
        400: {
          description: "Invalid ID supplied"
        },
      }

  /quotes:
    get:
      security:
        - bearerAuth: []
      tags: [
        "Admin"
      ]
      summary: Return Quotes.
      description: Return Quotes.
      responses:
        '200':
          description: Return Quotes.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                '0':
                  value: >-
                    [{"id":5,"movie_id":4,"quote":{"en":"What should tell your
                    mother?!","ka":"\u10e0\u10d0
                    \u10d5\u10e3\u10d7\u10ee\u10e0\u10d0
                    \u10d3\u10d4\u10d3\u10d0\u10e8\u10d4\u10dc\u10e1?!"},"thumbnail":"thumbnails\/jhQhvtHsPL6cDePilrEpc4eo98rrt822wA1axv4L.jpg","created_at":"2022-04-27T16:10:48.000000Z","updated_at":"2022-04-27T16:10:48.000000Z","movie":{"id":4,"movie":{"en":"Father
                    of a
                    Soldier","ka":"\u10ef\u10d0\u10e0\u10d8\u10e1\u10d9\u10d0\u10ea\u10d8\u10e1
                    \u10db\u10d0\u10db\u10d0"},"created_at":"2022-04-27T16:10:21.000000Z","updated_at":"2022-04-27T16:10:21.000000Z"}}]
  /quotes/create:
    get:
      tags: [
        "Admin"
      ]
      security:
        - bearerAuth: []
      summary: Return movies.
      description: Returns movies in quotation fields Need a movie ID that shows the movie name and gives you a choice.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                '0':
                  value: >-
                    [{"id":64,"movie":{"en":"\u10e2\u10d4\u10e1\u10e2","ka":"\u10e2\u10d4\u10e1\u10e2"}}]
      servers:
  /quotes/store:
    post:
      tags: [
        "Admin"
      ]
      security:
        - bearerAuth: []
      description: Create quote.
      summary: Create quote.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                quote_en:
                  required: true
                  type: string
                quote_ka:
                  required: true
                  type: string
                movie_id:
                  required: true
                  type: integer
                  format: int64
                thumbnail:
                  required: true
                  type: string
                  format: binary
              required:
                - quote_en
                - quote_ka
                - movie_id
                - thumbnail
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
              examples:
                '0':
                  value: >-
                    {
                      "movie_id": "4",
                      "quote": {
                        "en": "test",
                        "ka": "test"
                      },
                      "thumbnail": "thumbnails/CXfV3osEgA6w0cAP75Df0cpMCwbEbu8FrDXVbVbs.jpg",
                      "updated_at": "2022-04-28T19:43:55.000000Z",
                      "created_at": "2022-04-28T19:43:55.000000Z",
                      "id": 8
                    }
  /quotes/{quoteId}/edit:
    get:
      tags: [
        "Admin"
      ]
      summary: Returns Quote of ID data.
      parameters:
        - name: quoteId
          in: path
          required: true
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        movie:
                          type: object
                          properties:
                            ka:
                              type: string
                            en:
                              type: string
                        updated_at:
                          type: string
                        created_at:
                          type: string
                        id:
                          type: integer
                  quote:
                    type: object
                    properties:
                      thumbnail:
                        type: string
                      quote:
                        type: object
                        properties:
                          ka:
                            type: string
                          en:
                            type: string
                      updated_at:
                        type: string
                      created_at:
                        type: string
                      id:
                        type: integer
                      movie_id:
                        type: integer
              examples:
                '0':
                  value: >-
                    {"movies":[{"id":4,"movie":{"en":"Father of a
                    Soldier","ka":"\u10ef\u10d0\u10e0\u10d8\u10e1\u10d9\u10d0\u10ea\u10d8\u10e1
                    \u10db\u10d0\u10db\u10d0"},"created_at":"2022-04-27T16:10:21.000000Z","updated_at":"2022-04-27T16:10:21.000000Z"},{"id":5,"movie":{"en":"test","ka":"\u10e2\u10d4\u10e1\u10e2"},"created_at":"2022-04-28T07:59:39.000000Z","updated_at":"2022-04-28T07:59:39.000000Z"}],"quote":{"id":5,"movie_id":4,"quote":{"en":"What
                    should tell your mother?!","ka":"\u10e0\u10d0
                    \u10d5\u10e3\u10d7\u10ee\u10e0\u10d0
                    \u10d3\u10d4\u10d3\u10d0\u10e8\u10d4\u10dc\u10e1?!"},"thumbnail":"thumbnails\/jhQhvtHsPL6cDePilrEpc4eo98rrt822wA1axv4L.jpg","created_at":"2022-04-27T16:10:48.000000Z","updated_at":"2022-04-27T16:10:48.000000Z"}}
      security:
        - bearerAuth: []
  /quotes/{quoteId}/update:
    put:
      tags: [
        "Admin"
      ]
      security:
        - bearerAuth: []
      description: Quote Update.
      summary: Update quote.
      parameters:
        - name: quoteId
          in: path
          required: true
          schema:
            type : integer
            format: int64
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quote:
                  type: object
                  properties:
                    ka:
                      type: string
                    en:
                      type: string
                movie_id:
                  type: integer
            examples:
              '0':
                value: |-
                  {
                    "movie_id": 64,
                    "quote": {
                      "en": "test",
                      "ka": "test"
                    }
                  }
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  thumbnail:
                    type: string
                  quote:
                    type: object
                    properties:
                      ka:
                        type: string
                      en:
                        type: string
                  updated_at:
                    type: string
                  created_at:
                    type: string
                  id:
                    type: integer
                  movie_id:
                    type: integer
              examples:
                '0':
                  value: >-
                    {"id": 27,"movie_id": 64,"quote": {"en": "Father of a
                    Soldier","ka":"\u10ef\u10d0\u10e0\u10d8\u10e1\u10d9\u10d0\u10ea\u10d8\u10e1
                    \u10db\u10d0\u10db\u10d0" },"thumbnail": "thumbnails/ke8Kg7HAqwVzTNyzcLptX849HU1kshEkFdqXnxOK.jpg","created_at": "2022-05-02T19:26:09.000000Z","updated_at": "2022-05-02T21:13:14.000000Z"}

  /quotes/{quoteId}:
    delete:
      tags: [
        "Admin"
      ]
      security:
        - bearerAuth: []
      summary: Delete a Quote.
      parameters:
        - name: quoteId
          in: path
          required: true
          description: Delete a Quote.
          schema:
            type : integer
            format: int64
            minimum: 1
      description: Delete a Quote.
      responses: {
        200: {
          description: Delete successfully!
        },
        400: {
          description: "Invalid ID supplied"
        },
      }

